{
  "contractName": "GovernorTimelockControl",
  "abi": [
    {
      "inputs": [],
      "name": "Empty",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldTimelock",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTimelock",
          "type": "address"
        }
      ],
      "name": "TimelockChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "VoteCastWithParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXTENDED_BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "castVoteWithReasonAndParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteWithReasonAndParamsBySig",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "getVotesWithParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "relay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernor.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalEta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32",
          "name": "descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "queue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TimelockController",
          "name": "newTimelock",
          "type": "address"
        }
      ],
      "name": "updateTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldTimelock\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"TimelockChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalEta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"queue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TimelockController\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"updateTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly. Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus, the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be inaccessible. WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively executing a Denial of Service attack. This risk will be mitigated in a future release. _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"events\":{\"TimelockChange(address,address)\":{\"details\":\"Emitted when the timelock controller used for proposal execution is modified.\"}},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"constructor\":{\"details\":\"Set the timelock.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns weither `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalEta(uint256)\":{\"details\":\"Public accessor to check the eta of a queued proposal\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"queue(address[],uint256[],bytes[],bytes32)\":{\"details\":\"Function to queue a proposal to the timelock.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"Overridden version of the {Governor-state} function with added support for the `Queued` status.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"timelock()\":{\"details\":\"Public accessor to check the address of the timelock\"},\"updateTimelock(address)\":{\"details\":\"Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates must be proposed, scheduled, and executed through governance proposals. CAUTION: It is not recommended to change the timelock while there are other queued governance proposals.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, of delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/extensions/GovernorTimelockControl.sol\":\"GovernorTimelockControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5f72d994fe0c87888e25aed7f3cc6c84f373c260d614953f43e9ac371c6d5aa5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c89cbfefb3ae9c0307344ca2b3947fcee7b64185264ff0bf59cf21f8021b917\",\"dweb:/ipfs/QmdibjSfjin3RAL92kshuau1Dpj5tbZj1DUL6JMhetTshL\"]},\"project:/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]},\"project:/contracts/governance/Governor.sol\":{\"keccak256\":\"0x8de7a3e2accc9d010886d317b22c193c7678d931feb6b3d238d0820ee5c8e070\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa0a457bb22a66ac1c661db8d3e0f762671e5a0c78cd956e4542387e9eb1ec9e\",\"dweb:/ipfs/QmNq55rPFXtiTsgmmZmEYsz3Tn1uzV3stdT6XP49WbM5KN\"]},\"project:/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x8ec37558ac4e53d77fe81078c914f2f898b0f92d1a81cb1261374c4a2fbfe531\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4842982f617211bf2ba5c1439be9a1d1a65a7c9ca5a8f0461eb2bfff67bbee25\",\"dweb:/ipfs/QmZYePaukBU8hUAmuAaeJ5NRhHxxXWgCVey3DehwWXtmwL\"]},\"project:/contracts/governance/TimelockController.sol\":{\"keccak256\":\"0x7cf62a071510d27eb2c10c273482dbf91f508cc5a85f84b503ded41e39438669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae00e37c4f6c21ee535583326753c9f206b99a8ddda15177a853c31b4404ee68\",\"dweb:/ipfs/QmcUhPBqzZfNVADQrKPhMKbT7fXCvrBpTSw7gY82YPE19w\"]},\"project:/contracts/governance/extensions/GovernorTimelockControl.sol\":{\"keccak256\":\"0xdcb2c24f69c41a1f181942f02ccc000f4558561e877b2e255f5a503965afa5a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973abeb1d27516f5506573e78d9431cbec21c7d404e039bc32fc2cd33c691d9f\",\"dweb:/ipfs/QmWFhmM1cZvtEVuyeuSJ6NW9BzRc5x2LSFd25SPPaErjRD\"]},\"project:/contracts/governance/extensions/IGovernorTimelock.sol\":{\"keccak256\":\"0x1438a67e00a03534c9d6f0da883eda5dd810f30fac5a00448148e4669c1cd6a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://483ad7d34728092cc19fb67b3780674e5a26b861a613de24f7b0145fd9683a32\",\"dweb:/ipfs/QmQYW1hpanrdjih2BHdQ43M25WdYYkxT63SzqBSPYbvkPD\"]},\"project:/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x93c3ecba425886b8933e548ed3adbfc56e40ff66f5c60532458fb06ba81598e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62c825197992648dca38edb1db345c0b5fd9e68f7eca893101f45b9cae25acfd\",\"dweb:/ipfs/QmdzBQtYLpjnVd17qUC3b7YXAGyoRFqKGQKjCJXPumxGss\"]},\"project:/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xc97c28f24caed758d150587f1e57753705c2439f314ac47947739869c4413819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2319c1a8e34937da319c0a443a3fa9567994a9fc327be7186c7738573bcfa2f\",\"dweb:/ipfs/QmTSesyJCFLrjSJm5FoVLR1kXM26CnxVy1Ti9HHx31ZyJ2\"]},\"project:/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b74e064b6da34a7f0fb2118e56ce114bb40cb9658c6899c82e9b82e9051315e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a1f21cffab948ce9c49bfe9e017e00d77bd3c72e092b5169d3c2df5e33dc19\",\"dweb:/ipfs/QmRxYsuC1YzFZ76fsADhMwQdGdN9BGHZnws3PcboiDuEXT\"]},\"project:/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"project:/contracts/utils/Strings.sol\":{\"keccak256\":\"0x43bd1a72719f3bea01b14183c87341cc9247e9f885071a0f9792e9e50bcd1d7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09ed1d435bacc5c8162fecf8793613a10db9e8e680b002e276b00c74f86d10a9\",\"dweb:/ipfs/QmXBVDNQNpkmoW8RPxZ7nSNQNcxFb2bqtVFDe2mE53RKRb\"]},\"project:/contracts/utils/Timers.sol\":{\"keccak256\":\"0x40a3b110a465c2c5776c330090cb53b1e2b643e4715dc76a04953e0478f2cee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfa12ff65ef7c3f93d4e843106c09fe2bed47d4945c77a68d8aa0774b20869f1\",\"dweb:/ipfs/QmSTGQG9BuCeSyvdpSVXwe3f3sbaMFdugCFmaouuuouEwq\"]},\"project:/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xa0bdb8ad61db3586878a54f10629e0cbc32e2ad55d49417923f4ddf0774ba8ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c756c9693649253318e7e4e036f6c79e5066bf5737601277c35a7de749c64e9\",\"dweb:/ipfs/QmYoq4BN726dPTRZVyt2XfBR3S3Uas6paHjwh23qhCSgfh\"]},\"project:/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xc3cd851e3f4026a06510ff94c02c58160d7fcf287efdb04a2e71b2daed094820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973dc434ecfa676de1fe2e97dd22fd3ddc231140435774583c31709afdf41c12\",\"dweb:/ipfs/QmR2ESNCZBCsXgGVe5jMPWaNb8sM3sXQQjcQTZrmnxjM6w\"]},\"project:/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"project:/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"project:/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x1f77077cd373581ba0de8d47f9c0070ba30122099bfef894bbb8ef2912d841e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d2a722792efc78b89bcee857912d5c6fec0d09073ecf4ec4902c257dfb15af\",\"dweb:/ipfs/QmVrL9afe6MBdbXLUABPtsnL2CZZo96WtgcNq8PQ6Bm4QD\"]},\"project:/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x9f3dcc71ec3362dde682b278e24f0a61f284206d796baac6518243f438d6b176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec1b2c00462a968613a23c472e048f29f18442b03f82ba47cd83b8935021dc8c\",\"dweb:/ipfs/QmdmiM3Yh1oa1puHBUchtpCCJuYKHeMuSSoPHHssHAw7LX\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (governance/extensions/GovernorTimelockControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IGovernorTimelock.sol\";\r\nimport \"../Governor.sol\";\r\nimport \"../TimelockController.sol\";\r\n\r\n/**\r\n * @dev Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a\r\n * delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The\r\n * {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly.\r\n *\r\n * Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus,\r\n * the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be\r\n * inaccessible.\r\n *\r\n * WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it\r\n * grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are\r\n * available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively\r\n * executing a Denial of Service attack. This risk will be mitigated in a future release.\r\n *\r\n * _Available since v4.3._\r\n */\r\nabstract contract GovernorTimelockControl is IGovernorTimelock, Governor {\r\n    TimelockController private _timelock;\r\n    mapping(uint256 => bytes32) private _timelockIds;\r\n\r\n    /**\r\n     * @dev Emitted when the timelock controller used for proposal execution is modified.\r\n     */\r\n    event TimelockChange(address oldTimelock, address newTimelock);\r\n\r\n    /**\r\n     * @dev Set the timelock.\r\n     */\r\n    constructor(TimelockController timelockAddress) {\r\n        _updateTimelock(timelockAddress);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, Governor) returns (bool) {\r\n        return interfaceId == type(IGovernorTimelock).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Overridden version of the {Governor-state} function with added support for the `Queued` status.\r\n     */\r\n    function state(uint256 proposalId) public view virtual override(IGovernor, Governor) returns (ProposalState) {\r\n        ProposalState status = super.state(proposalId);\r\n\r\n        if (status != ProposalState.Succeeded) {\r\n            return status;\r\n        }\r\n\r\n        // core tracks execution, so we just have to check if successful proposal have been queued.\r\n        bytes32 queueid = _timelockIds[proposalId];\r\n        if (queueid == bytes32(0)) {\r\n            return status;\r\n        } else if (_timelock.isOperationDone(queueid)) {\r\n            return ProposalState.Executed;\r\n        } else if (_timelock.isOperationPending(queueid)) {\r\n            return ProposalState.Queued;\r\n        } else {\r\n            return ProposalState.Canceled;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Public accessor to check the address of the timelock\r\n     */\r\n    function timelock() public view virtual override returns (address) {\r\n        return address(_timelock);\r\n    }\r\n\r\n    /**\r\n     * @dev Public accessor to check the eta of a queued proposal\r\n     */\r\n    function proposalEta(uint256 proposalId) public view virtual override returns (uint256) {\r\n        uint256 eta = _timelock.getTimestamp(_timelockIds[proposalId]);\r\n        return eta == 1 ? 0 : eta; // _DONE_TIMESTAMP (1) should be replaced with a 0 value\r\n    }\r\n\r\n    /**\r\n     * @dev Function to queue a proposal to the timelock.\r\n     */\r\n    function queue(\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) public virtual override returns (uint256) {\r\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\r\n\r\n        require(state(proposalId) == ProposalState.Succeeded, \"Governor: proposal not successful\");\r\n\r\n        uint256 delay = _timelock.getMinDelay();\r\n        _timelockIds[proposalId] = _timelock.hashOperationBatch(targets, values, calldatas, 0, descriptionHash);\r\n        _timelock.scheduleBatch(targets, values, calldatas, 0, descriptionHash, delay);\r\n\r\n        emit ProposalQueued(proposalId, block.timestamp + delay);\r\n\r\n        return proposalId;\r\n    }\r\n\r\n    /**\r\n     * @dev Overridden execute function that run the already queued proposal through the timelock.\r\n     */\r\n    function _execute(\r\n        uint256, /* proposalId */\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) internal virtual override {\r\n        _timelock.executeBatch{value: msg.value}(targets, values, calldatas, 0, descriptionHash);\r\n    }\r\n\r\n    /**\r\n     * @dev Overridden version of the {Governor-_cancel} function to cancel the timelocked proposal if it as already\r\n     * been queued.\r\n     */\r\n    // This function can reenter through the external call to the timelock, but we assume the timelock is trusted and\r\n    // well behaved (according to TimelockController) and this will not happen.\r\n    // slither-disable-next-line reentrancy-no-eth\r\n    function _cancel(\r\n        address[] memory targets,\r\n        uint256[] memory values,\r\n        bytes[] memory calldatas,\r\n        bytes32 descriptionHash\r\n    ) internal virtual override returns (uint256) {\r\n        uint256 proposalId = super._cancel(targets, values, calldatas, descriptionHash);\r\n\r\n        if (_timelockIds[proposalId] != 0) {\r\n            _timelock.cancel(_timelockIds[proposalId]);\r\n            delete _timelockIds[proposalId];\r\n        }\r\n\r\n        return proposalId;\r\n    }\r\n\r\n    /**\r\n     * @dev Address through which the governor executes action. In this case, the timelock.\r\n     */\r\n    function _executor() internal view virtual override returns (address) {\r\n        return address(_timelock);\r\n    }\r\n\r\n    /**\r\n     * @dev Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates\r\n     * must be proposed, scheduled, and executed through governance proposals.\r\n     *\r\n     * CAUTION: It is not recommended to change the timelock while there are other queued governance proposals.\r\n     */\r\n    function updateTimelock(TimelockController newTimelock) external virtual onlyGovernance {\r\n        _updateTimelock(newTimelock);\r\n    }\r\n\r\n    function _updateTimelock(TimelockController newTimelock) private {\r\n        emit TimelockChange(address(_timelock), address(newTimelock));\r\n        _timelock = newTimelock;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Kshitij\\UBSem2\\CSE 526 - Blockchain\\Project\\Phase3\\MarketPlaceBlockchain\\BI-contract\\contracts\\governance\\extensions\\GovernorTimelockControl.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/extensions/GovernorTimelockControl.sol",
    "exportedSymbols": {
      "AccessControl": [
        854
      ],
      "Address": [
        18534
      ],
      "Context": [
        18922
      ],
      "DoubleEndedQueue": [
        22576
      ],
      "ECDSA": [
        20046
      ],
      "EIP712": [
        20373
      ],
      "ERC165": [
        20707
      ],
      "Governor": [
        3824
      ],
      "GovernorTimelockControl": [
        7448
      ],
      "IAccessControl": [
        1107
      ],
      "IERC1155Receiver": [
        11290
      ],
      "IERC165": [
        21031
      ],
      "IERC721Receiver": [
        15810
      ],
      "IGovernor": [
        4121
      ],
      "IGovernorTimelock": [
        7680
      ],
      "SafeCast": [
        21616
      ],
      "Strings": [
        19425
      ],
      "TimelockController": [
        5026
      ],
      "Timers": [
        19639
      ]
    },
    "id": 7449,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7073,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "136:23:32"
      },
      {
        "absolutePath": "project:/contracts/governance/extensions/IGovernorTimelock.sol",
        "file": "./IGovernorTimelock.sol",
        "id": 7074,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7449,
        "sourceUnit": 7681,
        "src": "163:33:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Governor.sol",
        "file": "../Governor.sol",
        "id": 7075,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7449,
        "sourceUnit": 3825,
        "src": "198:25:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/TimelockController.sol",
        "file": "../TimelockController.sol",
        "id": 7076,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7449,
        "sourceUnit": 5027,
        "src": "225:35:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 7078,
              "name": "IGovernorTimelock",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7680,
              "src": "1395:17:32"
            },
            "id": 7079,
            "nodeType": "InheritanceSpecifier",
            "src": "1395:17:32"
          },
          {
            "baseName": {
              "id": 7080,
              "name": "Governor",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3824,
              "src": "1414:8:32"
            },
            "id": 7081,
            "nodeType": "InheritanceSpecifier",
            "src": "1414:8:32"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7077,
          "nodeType": "StructuredDocumentation",
          "src": "264:1084:32",
          "text": " @dev Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a\n delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The\n {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly.\n Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus,\n the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be\n inaccessible.\n WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it\n grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are\n available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively\n executing a Denial of Service attack. This risk will be mitigated in a future release.\n _Available since v4.3._"
        },
        "fullyImplemented": false,
        "id": 7448,
        "linearizedBaseContracts": [
          7448,
          3824,
          11290,
          15810,
          7680,
          4121,
          20373,
          20707,
          21031,
          18922
        ],
        "name": "GovernorTimelockControl",
        "nameLocation": "1368:23:32",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7084,
            "mutability": "mutable",
            "name": "_timelock",
            "nameLocation": "1457:9:32",
            "nodeType": "VariableDeclaration",
            "scope": 7448,
            "src": "1430:36:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TimelockController_$5026",
              "typeString": "contract TimelockController"
            },
            "typeName": {
              "id": 7083,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7082,
                "name": "TimelockController",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5026,
                "src": "1430:18:32"
              },
              "referencedDeclaration": 5026,
              "src": "1430:18:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimelockController_$5026",
                "typeString": "contract TimelockController"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7088,
            "mutability": "mutable",
            "name": "_timelockIds",
            "nameLocation": "1509:12:32",
            "nodeType": "VariableDeclaration",
            "scope": 7448,
            "src": "1473:48:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 7087,
              "keyType": {
                "id": 7085,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1481:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1473:27:32",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 7086,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1492:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7089,
              "nodeType": "StructuredDocumentation",
              "src": "1530:103:32",
              "text": " @dev Emitted when the timelock controller used for proposal execution is modified."
            },
            "id": 7095,
            "name": "TimelockChange",
            "nameLocation": "1645:14:32",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7091,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldTimelock",
                  "nameLocation": "1668:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7095,
                  "src": "1660:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7093,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newTimelock",
                  "nameLocation": "1689:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7095,
                  "src": "1681:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1659:42:32"
            },
            "src": "1639:63:32"
          },
          {
            "body": {
              "id": 7106,
              "nodeType": "Block",
              "src": "1807:51:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7103,
                        "name": "timelockAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7099,
                        "src": "1834:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      ],
                      "id": 7102,
                      "name": "_updateTimelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7447,
                      "src": "1818:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TimelockController_$5026_$returns$__$",
                        "typeString": "function (contract TimelockController)"
                      }
                    },
                    "id": 7104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1818:32:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7105,
                  "nodeType": "ExpressionStatement",
                  "src": "1818:32:32"
                }
              ]
            },
            "documentation": {
              "id": 7096,
              "nodeType": "StructuredDocumentation",
              "src": "1710:43:32",
              "text": " @dev Set the timelock."
            },
            "id": 7107,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7099,
                  "mutability": "mutable",
                  "name": "timelockAddress",
                  "nameLocation": "1790:15:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7107,
                  "src": "1771:34:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TimelockController_$5026",
                    "typeString": "contract TimelockController"
                  },
                  "typeName": {
                    "id": 7098,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7097,
                      "name": "TimelockController",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5026,
                      "src": "1771:18:32"
                    },
                    "referencedDeclaration": 5026,
                    "src": "1771:18:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TimelockController_$5026",
                      "typeString": "contract TimelockController"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1770:36:32"
            },
            "returnParameters": {
              "id": 7101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1807:0:32"
            },
            "scope": 7448,
            "src": "1759:99:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2714,
              21030
            ],
            "body": {
              "id": 7130,
              "nodeType": "Block",
              "src": "2040:116:32",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 7128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 7123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7118,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7110,
                        "src": "2058:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7120,
                              "name": "IGovernorTimelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7680,
                              "src": "2078:17:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IGovernorTimelock_$7680_$",
                                "typeString": "type(contract IGovernorTimelock)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IGovernorTimelock_$7680_$",
                                "typeString": "type(contract IGovernorTimelock)"
                              }
                            ],
                            "id": 7119,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2073:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 7121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2073:23:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IGovernorTimelock_$7680",
                            "typeString": "type(contract IGovernorTimelock)"
                          }
                        },
                        "id": 7122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2073:35:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2058:50:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 7126,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7110,
                          "src": "2136:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 7124,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
                          "src": "2112:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_GovernorTimelockControl_$7448_$",
                            "typeString": "type(contract super GovernorTimelockControl)"
                          }
                        },
                        "id": 7125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2714,
                        "src": "2112:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 7127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2112:36:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2058:90:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7117,
                  "id": 7129,
                  "nodeType": "Return",
                  "src": "2051:97:32"
                }
              ]
            },
            "documentation": {
              "id": 7108,
              "nodeType": "StructuredDocumentation",
              "src": "1866:58:32",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 7131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1939:17:32",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7114,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7112,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21031,
                  "src": "2006:7:32"
                },
                {
                  "id": 7113,
                  "name": "Governor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3824,
                  "src": "2015:8:32"
                }
              ],
              "src": "1997:27:32"
            },
            "parameters": {
              "id": 7111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7110,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1964:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7131,
                  "src": "1957:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7109,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1956:20:32"
            },
            "returnParameters": {
              "id": 7117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7131,
                  "src": "2034:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7115,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:6:32"
            },
            "scope": 7448,
            "src": "1930:226:32",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2853,
              3946
            ],
            "body": {
              "id": 7197,
              "nodeType": "Block",
              "src": "2400:656:32",
              "statements": [
                {
                  "assignments": [
                    7145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7145,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "2425:6:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 7197,
                      "src": "2411:20:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalState_$3839",
                        "typeString": "enum IGovernor.ProposalState"
                      },
                      "typeName": {
                        "id": 7144,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7143,
                          "name": "ProposalState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3839,
                          "src": "2411:13:32"
                        },
                        "referencedDeclaration": 3839,
                        "src": "2411:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProposalState_$3839",
                          "typeString": "enum IGovernor.ProposalState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7150,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7148,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7134,
                        "src": "2446:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7146,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2434:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GovernorTimelockControl_$7448_$",
                          "typeString": "type(contract super GovernorTimelockControl)"
                        }
                      },
                      "id": 7147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2853,
                      "src": "2434:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$3839_$",
                        "typeString": "function (uint256) view returns (enum IGovernor.ProposalState)"
                      }
                    },
                    "id": 7149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2434:23:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalState_$3839",
                      "typeString": "enum IGovernor.ProposalState"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2411:46:32"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_ProposalState_$3839",
                      "typeString": "enum IGovernor.ProposalState"
                    },
                    "id": 7154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7151,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7145,
                      "src": "2474:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalState_$3839",
                        "typeString": "enum IGovernor.ProposalState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 7152,
                        "name": "ProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3839,
                        "src": "2484:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProposalState_$3839_$",
                          "typeString": "type(enum IGovernor.ProposalState)"
                        }
                      },
                      "id": 7153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Succeeded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3835,
                      "src": "2484:23:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProposalState_$3839",
                        "typeString": "enum IGovernor.ProposalState"
                      }
                    },
                    "src": "2474:33:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7158,
                  "nodeType": "IfStatement",
                  "src": "2470:79:32",
                  "trueBody": {
                    "id": 7157,
                    "nodeType": "Block",
                    "src": "2509:40:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 7155,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7145,
                          "src": "2531:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$3839",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 7142,
                        "id": 7156,
                        "nodeType": "Return",
                        "src": "2524:13:32"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7160,
                      "mutability": "mutable",
                      "name": "queueid",
                      "nameLocation": "2670:7:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 7197,
                      "src": "2662:15:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7159,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2662:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7164,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7161,
                      "name": "_timelockIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7088,
                      "src": "2680:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7163,
                    "indexExpression": {
                      "id": 7162,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7134,
                      "src": "2693:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2680:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2662:42:32"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7165,
                      "name": "queueid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7160,
                      "src": "2719:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2738:1:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2730:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7166,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2730:7:32",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2730:10:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2719:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 7176,
                          "name": "queueid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7160,
                          "src": "2818:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7174,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7084,
                          "src": "2792:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TimelockController_$5026",
                            "typeString": "contract TimelockController"
                          }
                        },
                        "id": 7175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isOperationDone",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4432,
                        "src": "2792:25:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32) view external returns (bool)"
                        }
                      },
                      "id": 7177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2792:34:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "arguments": [
                          {
                            "id": 7184,
                            "name": "queueid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7160,
                            "src": "2923:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7182,
                            "name": "_timelock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7084,
                            "src": "2894:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TimelockController_$5026",
                              "typeString": "contract TimelockController"
                            }
                          },
                          "id": 7183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperationPending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4393,
                          "src": "2894:28:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 7185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2894:37:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 7193,
                        "nodeType": "Block",
                        "src": "2993:56:32",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 7190,
                                "name": "ProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3839,
                                "src": "3015:13:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalState_$3839_$",
                                  "typeString": "type(enum IGovernor.ProposalState)"
                                }
                              },
                              "id": 7191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Canceled",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3833,
                              "src": "3015:22:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalState_$3839",
                                "typeString": "enum IGovernor.ProposalState"
                              }
                            },
                            "functionReturnParameters": 7142,
                            "id": 7192,
                            "nodeType": "Return",
                            "src": "3008:29:32"
                          }
                        ]
                      },
                      "id": 7194,
                      "nodeType": "IfStatement",
                      "src": "2890:159:32",
                      "trueBody": {
                        "id": 7189,
                        "nodeType": "Block",
                        "src": "2933:54:32",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 7186,
                                "name": "ProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3839,
                                "src": "2955:13:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalState_$3839_$",
                                  "typeString": "type(enum IGovernor.ProposalState)"
                                }
                              },
                              "id": 7187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Queued",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3836,
                              "src": "2955:20:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalState_$3839",
                                "typeString": "enum IGovernor.ProposalState"
                              }
                            },
                            "functionReturnParameters": 7142,
                            "id": 7188,
                            "nodeType": "Return",
                            "src": "2948:27:32"
                          }
                        ]
                      }
                    },
                    "id": 7195,
                    "nodeType": "IfStatement",
                    "src": "2788:261:32",
                    "trueBody": {
                      "id": 7181,
                      "nodeType": "Block",
                      "src": "2828:56:32",
                      "statements": [
                        {
                          "expression": {
                            "expression": {
                              "id": 7178,
                              "name": "ProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3839,
                              "src": "2850:13:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$3839_$",
                                "typeString": "type(enum IGovernor.ProposalState)"
                              }
                            },
                            "id": 7179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3838,
                            "src": "2850:22:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$3839",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          },
                          "functionReturnParameters": 7142,
                          "id": 7180,
                          "nodeType": "Return",
                          "src": "2843:29:32"
                        }
                      ]
                    }
                  },
                  "id": 7196,
                  "nodeType": "IfStatement",
                  "src": "2715:334:32",
                  "trueBody": {
                    "id": 7173,
                    "nodeType": "Block",
                    "src": "2742:40:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 7171,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7145,
                          "src": "2764:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$3839",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "functionReturnParameters": 7142,
                        "id": 7172,
                        "nodeType": "Return",
                        "src": "2757:13:32"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7132,
              "nodeType": "StructuredDocumentation",
              "src": "2164:121:32",
              "text": " @dev Overridden version of the {Governor-state} function with added support for the `Queued` status."
            },
            "functionSelector": "3e4f49e6",
            "id": 7198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "state",
            "nameLocation": "2300:5:32",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7138,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7136,
                  "name": "IGovernor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4121,
                  "src": "2355:9:32"
                },
                {
                  "id": 7137,
                  "name": "Governor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3824,
                  "src": "2366:8:32"
                }
              ],
              "src": "2346:29:32"
            },
            "parameters": {
              "id": 7135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7134,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "2314:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7198,
                  "src": "2306:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2305:20:32"
            },
            "returnParameters": {
              "id": 7142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7198,
                  "src": "2385:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProposalState_$3839",
                    "typeString": "enum IGovernor.ProposalState"
                  },
                  "typeName": {
                    "id": 7140,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7139,
                      "name": "ProposalState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3839,
                      "src": "2385:13:32"
                    },
                    "referencedDeclaration": 3839,
                    "src": "2385:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProposalState_$3839",
                      "typeString": "enum IGovernor.ProposalState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2384:15:32"
            },
            "scope": 7448,
            "src": "2291:765:32",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7656
            ],
            "body": {
              "id": 7210,
              "nodeType": "Block",
              "src": "3215:44:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7207,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7084,
                        "src": "3241:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      ],
                      "id": 7206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3233:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 7205,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3233:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 7208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:18:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7204,
                  "id": 7209,
                  "nodeType": "Return",
                  "src": "3226:25:32"
                }
              ]
            },
            "documentation": {
              "id": 7199,
              "nodeType": "StructuredDocumentation",
              "src": "3064:78:32",
              "text": " @dev Public accessor to check the address of the timelock"
            },
            "functionSelector": "d33219b4",
            "id": 7211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "timelock",
            "nameLocation": "3157:8:32",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7201,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3188:8:32"
            },
            "parameters": {
              "id": 7200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3165:2:32"
            },
            "returnParameters": {
              "id": 7204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7211,
                  "src": "3206:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3206:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3205:9:32"
            },
            "scope": 7448,
            "src": "3148:111:32",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7663
            ],
            "body": {
              "id": 7236,
              "nodeType": "Block",
              "src": "3440:174:32",
              "statements": [
                {
                  "assignments": [
                    7221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7221,
                      "mutability": "mutable",
                      "name": "eta",
                      "nameLocation": "3459:3:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 7236,
                      "src": "3451:11:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3451:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7228,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7224,
                          "name": "_timelockIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7088,
                          "src": "3488:12:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 7226,
                        "indexExpression": {
                          "id": 7225,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7214,
                          "src": "3501:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3488:24:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 7222,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7084,
                        "src": "3465:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      },
                      "id": 7223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4445,
                      "src": "3465:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) view external returns (uint256)"
                      }
                    },
                    "id": 7227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3465:48:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3451:62:32"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7229,
                        "name": "eta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7221,
                        "src": "3531:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 7230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3538:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3531:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 7233,
                      "name": "eta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7221,
                      "src": "3546:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3531:18:32",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 7232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3542:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7219,
                  "id": 7235,
                  "nodeType": "Return",
                  "src": "3524:25:32"
                }
              ]
            },
            "documentation": {
              "id": 7212,
              "nodeType": "StructuredDocumentation",
              "src": "3267:79:32",
              "text": " @dev Public accessor to check the eta of a queued proposal"
            },
            "functionSelector": "ab58fb8e",
            "id": 7237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposalEta",
            "nameLocation": "3361:11:32",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7216,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3413:8:32"
            },
            "parameters": {
              "id": 7215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7214,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "3381:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7237,
                  "src": "3373:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3372:20:32"
            },
            "returnParameters": {
              "id": 7219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7237,
                  "src": "3431:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3430:9:32"
            },
            "scope": 7448,
            "src": "3352:262:32",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7679
            ],
            "body": {
              "id": 7314,
              "nodeType": "Block",
              "src": "3901:554:32",
              "statements": [
                {
                  "assignments": [
                    7256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7256,
                      "mutability": "mutable",
                      "name": "proposalId",
                      "nameLocation": "3920:10:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 7314,
                      "src": "3912:18:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7255,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3912:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7263,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7258,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7241,
                        "src": "3946:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 7259,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7244,
                        "src": "3955:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 7260,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7247,
                        "src": "3963:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "id": 7261,
                        "name": "descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7249,
                        "src": "3974:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7257,
                      "name": "hashProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2766
                      ],
                      "referencedDeclaration": 2766,
                      "src": "3933:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"
                      }
                    },
                    "id": 7262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3933:57:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3912:78:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProposalState_$3839",
                          "typeString": "enum IGovernor.ProposalState"
                        },
                        "id": 7270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 7266,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7256,
                              "src": "4017:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7265,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7198
                            ],
                            "referencedDeclaration": 7198,
                            "src": "4011:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$3839_$",
                              "typeString": "function (uint256) view returns (enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 7267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4011:17:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$3839",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 7268,
                            "name": "ProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3839,
                            "src": "4032:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProposalState_$3839_$",
                              "typeString": "type(enum IGovernor.ProposalState)"
                            }
                          },
                          "id": 7269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Succeeded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3835,
                          "src": "4032:23:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProposalState_$3839",
                            "typeString": "enum IGovernor.ProposalState"
                          }
                        },
                        "src": "4011:44:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756c",
                        "id": 7271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4057:35:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9",
                          "typeString": "literal_string \"Governor: proposal not successful\""
                        },
                        "value": "Governor: proposal not successful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9",
                          "typeString": "literal_string \"Governor: proposal not successful\""
                        }
                      ],
                      "id": 7264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4003:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4003:90:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7273,
                  "nodeType": "ExpressionStatement",
                  "src": "4003:90:32"
                },
                {
                  "assignments": [
                    7275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7275,
                      "mutability": "mutable",
                      "name": "delay",
                      "nameLocation": "4114:5:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 7314,
                      "src": "4106:13:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4106:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7279,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7276,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7084,
                        "src": "4122:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      },
                      "id": 7277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMinDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4454,
                      "src": "4122:21:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 7278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4122:23:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4106:39:32"
                },
                {
                  "expression": {
                    "id": 7291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7280,
                        "name": "_timelockIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7088,
                        "src": "4156:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 7282,
                      "indexExpression": {
                        "id": 7281,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7256,
                        "src": "4169:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4156:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7285,
                          "name": "targets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7241,
                          "src": "4212:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 7286,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7244,
                          "src": "4221:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 7287,
                          "name": "calldatas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7247,
                          "src": "4229:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 7288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4240:1:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 7289,
                          "name": "descriptionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7249,
                          "src": "4243:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7283,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7084,
                          "src": "4183:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TimelockController_$5026",
                            "typeString": "contract TimelockController"
                          }
                        },
                        "id": 7284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashOperationBatch",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4513,
                        "src": "4183:28:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32,bytes32) pure external returns (bytes32)"
                        }
                      },
                      "id": 7290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4183:76:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4156:103:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7292,
                  "nodeType": "ExpressionStatement",
                  "src": "4156:103:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7296,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7241,
                        "src": "4294:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 7297,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7244,
                        "src": "4303:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 7298,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7247,
                        "src": "4311:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4322:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 7300,
                        "name": "descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7249,
                        "src": "4325:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7301,
                        "name": "delay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7275,
                        "src": "4342:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7293,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7084,
                        "src": "4270:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      },
                      "id": 7295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "scheduleBatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4643,
                      "src": "4270:23:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32,bytes32,uint256) external"
                      }
                    },
                    "id": 7302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4270:78:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7303,
                  "nodeType": "ExpressionStatement",
                  "src": "4270:78:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7305,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7256,
                        "src": "4381:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7306,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4393:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4393:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 7308,
                          "name": "delay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7275,
                          "src": "4411:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4393:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7304,
                      "name": "ProposalQueued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7651,
                      "src": "4366:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4366:51:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7311,
                  "nodeType": "EmitStatement",
                  "src": "4361:56:32"
                },
                {
                  "expression": {
                    "id": 7312,
                    "name": "proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7256,
                    "src": "4437:10:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7254,
                  "id": 7313,
                  "nodeType": "Return",
                  "src": "4430:17:32"
                }
              ]
            },
            "documentation": {
              "id": 7238,
              "nodeType": "StructuredDocumentation",
              "src": "3622:71:32",
              "text": " @dev Function to queue a proposal to the timelock."
            },
            "functionSelector": "160cbed7",
            "id": 7315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "queue",
            "nameLocation": "3708:5:32",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7251,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3874:8:32"
            },
            "parameters": {
              "id": 7250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7241,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "3741:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7315,
                  "src": "3724:24:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7239,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3724:7:32",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7240,
                    "nodeType": "ArrayTypeName",
                    "src": "3724:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7244,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "3776:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7315,
                  "src": "3759:23:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7242,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3759:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7243,
                    "nodeType": "ArrayTypeName",
                    "src": "3759:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7247,
                  "mutability": "mutable",
                  "name": "calldatas",
                  "nameLocation": "3808:9:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7315,
                  "src": "3793:24:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7245,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3793:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 7246,
                    "nodeType": "ArrayTypeName",
                    "src": "3793:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7249,
                  "mutability": "mutable",
                  "name": "descriptionHash",
                  "nameLocation": "3836:15:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7315,
                  "src": "3828:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7248,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3828:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3713:145:32"
            },
            "returnParameters": {
              "id": 7254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7253,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7315,
                  "src": "3892:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3892:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3891:9:32"
            },
            "scope": 7448,
            "src": "3699:756:32",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3238
            ],
            "body": {
              "id": 7346,
              "nodeType": "Block",
              "src": "4805:107:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7339,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7321,
                        "src": "4857:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 7340,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7324,
                        "src": "4866:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 7341,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7327,
                        "src": "4874:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4885:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 7343,
                        "name": "descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7329,
                        "src": "4888:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7333,
                          "name": "_timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7084,
                          "src": "4816:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TimelockController_$5026",
                            "typeString": "contract TimelockController"
                          }
                        },
                        "id": 7335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "executeBatch",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4857,
                        "src": "4816:22:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$__$",
                          "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32,bytes32) payable external"
                        }
                      },
                      "id": 7338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 7336,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4846:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4846:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4816:40:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$__$value",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32,bytes32) payable external"
                      }
                    },
                    "id": 7344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4816:88:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7345,
                  "nodeType": "ExpressionStatement",
                  "src": "4816:88:32"
                }
              ]
            },
            "documentation": {
              "id": 7316,
              "nodeType": "StructuredDocumentation",
              "src": "4463:112:32",
              "text": " @dev Overridden execute function that run the already queued proposal through the timelock."
            },
            "id": 7347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "4590:8:32",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7331,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4796:8:32"
            },
            "parameters": {
              "id": 7330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7318,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7347,
                  "src": "4609:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4609:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7321,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "4661:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7347,
                  "src": "4644:24:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7319,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4644:7:32",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7320,
                    "nodeType": "ArrayTypeName",
                    "src": "4644:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7324,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "4696:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7347,
                  "src": "4679:23:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7322,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4679:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7323,
                    "nodeType": "ArrayTypeName",
                    "src": "4679:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7327,
                  "mutability": "mutable",
                  "name": "calldatas",
                  "nameLocation": "4728:9:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7347,
                  "src": "4713:24:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7325,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4713:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 7326,
                    "nodeType": "ArrayTypeName",
                    "src": "4713:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7329,
                  "mutability": "mutable",
                  "name": "descriptionHash",
                  "nameLocation": "4756:15:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7347,
                  "src": "4748:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7328,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4598:180:32"
            },
            "returnParameters": {
              "id": 7332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4805:0:32"
            },
            "scope": 7448,
            "src": "4581:331:32",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3401
            ],
            "body": {
              "id": 7397,
              "nodeType": "Block",
              "src": "5535:290:32",
              "statements": [
                {
                  "assignments": [
                    7366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7366,
                      "mutability": "mutable",
                      "name": "proposalId",
                      "nameLocation": "5554:10:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 7397,
                      "src": "5546:18:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7365,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5546:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7374,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7369,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7351,
                        "src": "5581:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 7370,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7354,
                        "src": "5590:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 7371,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7357,
                        "src": "5598:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "id": 7372,
                        "name": "descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7359,
                        "src": "5609:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 7367,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5567:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GovernorTimelockControl_$7448_$",
                          "typeString": "type(contract super GovernorTimelockControl)"
                        }
                      },
                      "id": 7368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_cancel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3401,
                      "src": "5567:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) returns (uint256)"
                      }
                    },
                    "id": 7373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5567:58:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5546:79:32"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 7379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 7375,
                        "name": "_timelockIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7088,
                        "src": "5642:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 7377,
                      "indexExpression": {
                        "id": 7376,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7366,
                        "src": "5655:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5642:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5670:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5642:29:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7394,
                  "nodeType": "IfStatement",
                  "src": "5638:150:32",
                  "trueBody": {
                    "id": 7393,
                    "nodeType": "Block",
                    "src": "5673:115:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 7383,
                                "name": "_timelockIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7088,
                                "src": "5705:12:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                  "typeString": "mapping(uint256 => bytes32)"
                                }
                              },
                              "id": 7385,
                              "indexExpression": {
                                "id": 7384,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7366,
                                "src": "5718:10:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5705:24:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 7380,
                              "name": "_timelock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7084,
                              "src": "5688:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TimelockController_$5026",
                                "typeString": "contract TimelockController"
                              }
                            },
                            "id": 7382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cancel",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4703,
                            "src": "5688:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) external"
                            }
                          },
                          "id": 7386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5688:42:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7387,
                        "nodeType": "ExpressionStatement",
                        "src": "5688:42:32"
                      },
                      {
                        "expression": {
                          "id": 7391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5745:31:32",
                          "subExpression": {
                            "baseExpression": {
                              "id": 7388,
                              "name": "_timelockIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7088,
                              "src": "5752:12:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 7390,
                            "indexExpression": {
                              "id": 7389,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7366,
                              "src": "5765:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5752:24:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7392,
                        "nodeType": "ExpressionStatement",
                        "src": "5745:31:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 7395,
                    "name": "proposalId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7366,
                    "src": "5807:10:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7364,
                  "id": 7396,
                  "nodeType": "Return",
                  "src": "5800:17:32"
                }
              ]
            },
            "documentation": {
              "id": 7348,
              "nodeType": "StructuredDocumentation",
              "src": "4920:151:32",
              "text": " @dev Overridden version of the {Governor-_cancel} function to cancel the timelocked proposal if it as already\n been queued."
            },
            "id": 7398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_cancel",
            "nameLocation": "5338:7:32",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7361,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5508:8:32"
            },
            "parameters": {
              "id": 7360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7351,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "5373:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7398,
                  "src": "5356:24:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7349,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5356:7:32",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7350,
                    "nodeType": "ArrayTypeName",
                    "src": "5356:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7354,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "5408:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7398,
                  "src": "5391:23:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7352,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5391:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7353,
                    "nodeType": "ArrayTypeName",
                    "src": "5391:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7357,
                  "mutability": "mutable",
                  "name": "calldatas",
                  "nameLocation": "5440:9:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7398,
                  "src": "5425:24:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7355,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "5425:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 7356,
                    "nodeType": "ArrayTypeName",
                    "src": "5425:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7359,
                  "mutability": "mutable",
                  "name": "descriptionHash",
                  "nameLocation": "5468:15:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7398,
                  "src": "5460:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7358,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5460:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5345:145:32"
            },
            "returnParameters": {
              "id": 7364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7363,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7398,
                  "src": "5526:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5525:9:32"
            },
            "scope": 7448,
            "src": "5329:496:32",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3757
            ],
            "body": {
              "id": 7410,
              "nodeType": "Block",
              "src": "6014:44:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7407,
                        "name": "_timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7084,
                        "src": "6040:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      ],
                      "id": 7406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6032:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 7405,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6032:7:32",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 7408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6032:18:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7404,
                  "id": 7409,
                  "nodeType": "Return",
                  "src": "6025:25:32"
                }
              ]
            },
            "documentation": {
              "id": 7399,
              "nodeType": "StructuredDocumentation",
              "src": "5833:105:32",
              "text": " @dev Address through which the governor executes action. In this case, the timelock."
            },
            "id": 7411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executor",
            "nameLocation": "5953:9:32",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7401,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5987:8:32"
            },
            "parameters": {
              "id": 7400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5962:2:32"
            },
            "returnParameters": {
              "id": 7404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7403,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7411,
                  "src": "6005:7:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6004:9:32"
            },
            "scope": 7448,
            "src": "5944:114:32",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7424,
              "nodeType": "Block",
              "src": "6492:47:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7421,
                        "name": "newTimelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7415,
                        "src": "6519:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TimelockController_$5026",
                          "typeString": "contract TimelockController"
                        }
                      ],
                      "id": 7420,
                      "name": "_updateTimelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7447,
                      "src": "6503:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TimelockController_$5026_$returns$__$",
                        "typeString": "function (contract TimelockController)"
                      }
                    },
                    "id": 7422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6503:28:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7423,
                  "nodeType": "ExpressionStatement",
                  "src": "6503:28:32"
                }
              ]
            },
            "documentation": {
              "id": 7412,
              "nodeType": "StructuredDocumentation",
              "src": "6066:332:32",
              "text": " @dev Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates\n must be proposed, scheduled, and executed through governance proposals.\n CAUTION: It is not recommended to change the timelock while there are other queued governance proposals."
            },
            "functionSelector": "a890c910",
            "id": 7425,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7418,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7417,
                  "name": "onlyGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2632,
                  "src": "6477:14:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "6477:14:32"
              }
            ],
            "name": "updateTimelock",
            "nameLocation": "6413:14:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7415,
                  "mutability": "mutable",
                  "name": "newTimelock",
                  "nameLocation": "6447:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7425,
                  "src": "6428:30:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TimelockController_$5026",
                    "typeString": "contract TimelockController"
                  },
                  "typeName": {
                    "id": 7414,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7413,
                      "name": "TimelockController",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5026,
                      "src": "6428:18:32"
                    },
                    "referencedDeclaration": 5026,
                    "src": "6428:18:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TimelockController_$5026",
                      "typeString": "contract TimelockController"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6427:32:32"
            },
            "returnParameters": {
              "id": 7419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6492:0:32"
            },
            "scope": 7448,
            "src": "6404:135:32",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7446,
              "nodeType": "Block",
              "src": "6612:114:32",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7434,
                            "name": "_timelock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7084,
                            "src": "6651:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TimelockController_$5026",
                              "typeString": "contract TimelockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TimelockController_$5026",
                              "typeString": "contract TimelockController"
                            }
                          ],
                          "id": 7433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6643:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7432,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6643:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6643:18:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7438,
                            "name": "newTimelock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7428,
                            "src": "6671:11:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TimelockController_$5026",
                              "typeString": "contract TimelockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TimelockController_$5026",
                              "typeString": "contract TimelockController"
                            }
                          ],
                          "id": 7437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6663:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7436,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6663:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6663:20:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7431,
                      "name": "TimelockChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7095,
                      "src": "6628:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6628:56:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7441,
                  "nodeType": "EmitStatement",
                  "src": "6623:61:32"
                },
                {
                  "expression": {
                    "id": 7444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7442,
                      "name": "_timelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7084,
                      "src": "6695:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TimelockController_$5026",
                        "typeString": "contract TimelockController"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7443,
                      "name": "newTimelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7428,
                      "src": "6707:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TimelockController_$5026",
                        "typeString": "contract TimelockController"
                      }
                    },
                    "src": "6695:23:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TimelockController_$5026",
                      "typeString": "contract TimelockController"
                    }
                  },
                  "id": 7445,
                  "nodeType": "ExpressionStatement",
                  "src": "6695:23:32"
                }
              ]
            },
            "id": 7447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateTimelock",
            "nameLocation": "6556:15:32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7428,
                  "mutability": "mutable",
                  "name": "newTimelock",
                  "nameLocation": "6591:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 7447,
                  "src": "6572:30:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TimelockController_$5026",
                    "typeString": "contract TimelockController"
                  },
                  "typeName": {
                    "id": 7427,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7426,
                      "name": "TimelockController",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5026,
                      "src": "6572:18:32"
                    },
                    "referencedDeclaration": 5026,
                    "src": "6572:18:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TimelockController_$5026",
                      "typeString": "contract TimelockController"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6571:32:32"
            },
            "returnParameters": {
              "id": 7430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6612:0:32"
            },
            "scope": 7448,
            "src": "6547:179:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 7449,
        "src": "1350:5379:32",
        "usedErrors": [
          22242
        ]
      }
    ],
    "src": "136:6595:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-08T19:09:20.646Z",
  "devdoc": {
    "details": "Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly. Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus, the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be inaccessible. WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively executing a Denial of Service attack. This risk will be mitigated in a future release. _Available since v4.3._",
    "errors": {
      "Empty()": [
        {
          "details": "An operation (e.g. {front}) couldn't be completed due to the queue being empty."
        }
      ]
    },
    "events": {
      "TimelockChange(address,address)": {
        "details": "Emitted when the timelock controller used for proposal execution is modified."
      }
    },
    "kind": "dev",
    "methods": {
      "COUNTING_MODE()": {
        "details": "A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class."
      },
      "castVote(uint256,uint8)": {
        "details": "See {IGovernor-castVote}."
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "See {IGovernor-castVoteBySig}."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "details": "See {IGovernor-castVoteWithReason}."
      },
      "castVoteWithReasonAndParams(uint256,uint8,string,bytes)": {
        "details": "See {IGovernor-castVoteWithReasonAndParams}."
      },
      "castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)": {
        "details": "See {IGovernor-castVoteWithReasonAndParamsBySig}."
      },
      "constructor": {
        "details": "Set the timelock."
      },
      "execute(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-execute}."
      },
      "getVotes(address,uint256)": {
        "details": "See {IGovernor-getVotes}."
      },
      "getVotesWithParams(address,uint256,bytes)": {
        "details": "See {IGovernor-getVotesWithParams}."
      },
      "hasVoted(uint256,address)": {
        "details": "Returns weither `account` has cast a vote on `proposalId`."
      },
      "hashProposal(address[],uint256[],bytes[],bytes32)": {
        "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
      },
      "name()": {
        "details": "See {IGovernor-name}."
      },
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155Receiver-onERC1155BatchReceived}."
      },
      "onERC1155Received(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155Receiver-onERC1155Received}."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}."
      },
      "proposalDeadline(uint256)": {
        "details": "See {IGovernor-proposalDeadline}."
      },
      "proposalEta(uint256)": {
        "details": "Public accessor to check the eta of a queued proposal"
      },
      "proposalSnapshot(uint256)": {
        "details": "See {IGovernor-proposalSnapshot}."
      },
      "proposalThreshold()": {
        "details": "Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_."
      },
      "propose(address[],uint256[],bytes[],string)": {
        "details": "See {IGovernor-propose}."
      },
      "queue(address[],uint256[],bytes[],bytes32)": {
        "details": "Function to queue a proposal to the timelock."
      },
      "quorum(uint256)": {
        "details": "Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes})."
      },
      "relay(address,uint256,bytes)": {
        "details": "Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant."
      },
      "state(uint256)": {
        "details": "Overridden version of the {Governor-state} function with added support for the `Queued` status."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "timelock()": {
        "details": "Public accessor to check the address of the timelock"
      },
      "updateTimelock(address)": {
        "details": "Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates must be proposed, scheduled, and executed through governance proposals. CAUTION: It is not recommended to change the timelock while there are other queued governance proposals."
      },
      "version()": {
        "details": "See {IGovernor-version}."
      },
      "votingDelay()": {
        "details": "Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, of delegate it, before the voting of a proposal starts."
      },
      "votingPeriod()": {
        "details": "Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "COUNTING_MODE()": {
        "notice": "module:voting"
      },
      "hasVoted(uint256,address)": {
        "notice": "module:voting"
      },
      "quorum(uint256)": {
        "notice": "module:user-config"
      },
      "votingDelay()": {
        "notice": "module:user-config"
      },
      "votingPeriod()": {
        "notice": "module:user-config"
      }
    },
    "version": 1
  }
}